
CREATE OR REPLACE TRIGGER INSERT_WORKER_ELAPSED
BEFORE INSERT ON ALL_WORKERS_ELAPSED
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO workers_factory_1 (first_name, last_name, start_date)
        VALUES (:new.first_name, :new.last_name, SYSTIMESTAMP);
    ELSE
        RAISE_APPLICATION_ERROR(-20001, 'Insertions only allowed on ALL_WORKERS_ELAPSED view.');
    END IF;
END;

CREATE OR REPLACE TRIGGER AUDIT_ROBOT_INSERT
AFTER INSERT ON ROBOTS_FACTORIES
FOR EACH ROW
BEGIN
    INSERT INTO AUDIT_ROBOT (robot_model, insert_date)
    VALUES (:new.model, SYSTIMESTAMP);
END;

CREATE OR REPLACE TRIGGER CHECK_FACTORIES_COUNT
BEFORE INSERT OR UPDATE OR DELETE ON ROBOTS_FACTORIES
DECLARE
    factory_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO factory_count FROM FACTORIES;
    
    IF factory_count <> (SELECT COUNT(*) FROM user_tables WHERE table_name LIKE 'WORKERS_FACTORY_%') THEN
        RAISE_APPLICATION_ERROR(-20002, 'Number of factories and workers tables mismatch.');
    END IF;
END;

CREATE OR REPLACE TRIGGER CALCULATE_WORKER_DURATION
BEFORE UPDATE OF end_date ON ALL_WORKERS
FOR EACH ROW
BEGIN
    IF UPDATING THEN
        :new.duration := SYSTIMESTAMP - :old.start_date;
    END IF;
END;
